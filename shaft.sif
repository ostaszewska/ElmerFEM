$ I_tot = 37.5		! total current in driving coil Amper-turns (pol. prado-zwoje)
$ R_tot = 10e3		! total resistance of sensing coil
$ M_tot = 1.6

! --- initial calculations section ---

! cross-section of driving coil S_sens = 0.75 mm * 32 mm = 24 mm2 = 24 * 10^-6 =  2.4e-5 m2
$ I_dens = I_tot / 2.4e-5

! cross-section of the sensing coil S_sens = = 6 mm * 0.75 mm = 4.5 * 10^-6 =  0.45e-5 m2
! length of the sensing coil L_sens = 2 * pi * 3.375 mm = 2 * pi * 0.003375 = 0.0212 m
! resistivity of the sensing coil  ro = R * S_sens / L_sens
! conductivity = 1 / resistivity

$ Cond_v = 1/(R_tot * 0.45e-5 / 0.0212)


! setup geometry
$ R1 = 0.000125
$ R2 = 0.00125

! sigma_s = M_tot / (2*pi* (R2^3/3 - R1^3/3))

$ sigma_s = M_tot / (2.094395102 * (R2^3-R1^3))





! frequency calculations
$ freq_t = 2000  ! 200  Hz
$ ang_freq_t = 6.283185307 * freq_t



Header
  CHECK KEYWORDS Warn
  Mesh DB "." "shaft"
  Include Path ""
  Results Directory ""
End

Simulation
  Max Output Level = 5
  Coordinate System = Cartesian
  Coordinate Mapping(3) = 1 2 3
  Angular Frequency = $ang_freq_t   ! angular frequency
  Simulation Type = Steady state
  Steady State Max Iterations = 1
  Output Intervals = 1
  Solver Input File = shaft.sif
  Post File = shaft.ep
End

Constants
  Gravity(4) = 0 -1 0 9.82
  Stefan Boltzmann = 5.67e-08
  Permittivity of Vacuum = 8.8542e-12
  Boltzmann Constant = 1.3807e-23
  Unit Charge = 1.602e-19
End

! ------ MATERIALS --------

Material 1
  Name = "Air"
!  Relative Permittivity = Real 1.00059
  Electric Conductivity = Real 0.0
  Relative Permeability = Real 1.0
End

Material 2
  Name = "Steel"
  Poisson ratio = Real 0.3
  Youngs modulus = Real 200.0e9
  Electric Conductivity = Real 1.0e7

Reluctivity(3,3) = Variable "Principal Stress", "Principal Angle"
		Real procedure "file_reluct" "reluct_func"

!Reluctivity(3,3) = 80 0 0 0 80 0 0 0 80 

Reluctivity Im(3,3) = 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0

!	Relative Permeability = Variable "Magnetic Field Strength 1", "Magnetic Field Strength 2", "Magnetic Field Strength 3"
!        Real MATC "x=tx(0);y=tx(1);z=tx(2);H=sqrt(x^2+y^2+z^2);if(H<1998.232738) {769} else {1536640.9756/H}"

End

Material 3
  Name = "Copper"
  Electric Conductivity = Real 0.0 ! 6.0e7
  Relative Permeability = Real 1.0
End

Material 4
  Name = "Resistor"
  Electric Conductivity = $Cond_v
  Relative Permeability = Real 1.0
End

! ------- BODIES ----------

Body 1
  Target Bodies(1) = 1
  Name = "Shaft"
  Material = 2
  Equation = 1

End

Body 2
  Target Bodies(1) = 2
  Name = "Coil_drv"
  Material = 3
  Equation = 2
  Body Force = 1
End

Body 3
  Target Bodies(1) = 3
  Name = "Coil_sens"
  Material = 4
  Equation = 2
End

Body 4
  Target Bodies(1) = 4
  Name = "Sphere"
  Material = 1
  Equation = 2
End

! -------- EQUATIONS ----------
Equation 1
	Name = "mech_magn"
	Active Solvers (5) =  1 2 3 4 5
End

Equation 2
	Name = "magn"
	Active Solvers (4) =  2 3 4 5
End

! --------- SOLVERS --------

Solver 1
  Equation = Linear elasticity
  Procedure = "StressSolve" "StressSolver"
  Variable = -dofs 3 Displacement
  Exec Solver = before simulation ! Always
!  Element = p:2

!  Stabilize = True
!  Bubbles = False
!  Lumped Mass Matrix = False
!  Optimize Bandwidth = True
!  Steady State Convergence Tolerance = 9.0e-6
!  Nonlinear System Convergence Tolerance = 1.0e-11
!  Nonlinear System Max Iterations = 1
!  Nonlinear System Newton After Iterations = 3
!  Nonlinear System Newton After Tolerance = 1.0e-11
!  Nonlinear System Relaxation Factor = 1
!  Linear System Solver = Iterative
!  Linear System Iterative Method = CG ! BiCGStabl CGR
!  Linear System Max Iterations = 15000
!  Linear System Convergence Tolerance = 9.0e-6
!  BiCGstabl polynomial degree = 2
!  Linear System Preconditioning = ILU1
!  Linear System ILUT Tolerance = 1.0e-11
!  Linear System Abort Not Converged = False
!  Linear System Residual Output = 1
!  Linear System Precondition Recompute = 1



!  Variable DOFs = Integer 2
  Displace Mesh = Logical FALSE  !TRUE   

  Linear System Solver = Direct
  Linear System Symmetric = Logical True
  Linear System Scaling = Logical False
  Linear System Iterative Method = BiCGStab
  Linear System Direct Method = MUMPS ! UMFPACK
  Linear System Convergence Tolerance = 1.0e-10
  Linear System Max Iterations = 200
  Linear System Preconditioning = ILU2

  Nonlinear System Convergence Tolerance = Real 1.0e-12
  Nonlinear System Max Iterations = Integer 1
  Nonlinear System Relaxation Factor = Real 1

  Steady State Convergence Tolerance= 1.0e-7
  Optimize Bandwidth = True


! Fix Displacements = True

  Calculate Strains = True
  Calculate Principal = True
  Calculate Stresses = True
  Calculate Pangle = True

End

Solver 2
  Equation = "MGDynamics"

  Variable = "AV[AV re:1 AV im:1]"
  Procedure = "MagnetoDynamics" "WhitneyAVHarmonicSolver"

  Linear System Symmetric = True
  Linear System Solver = "Iterative"
  Linear System Preconditioning = none
  Linear System Residual Output = 50
  Linear System Max Iterations = 10000
  Linear System Iterative Method = BiCGStabl
  !GCR
  Linear System Convergence Tolerance = 5.0e-6
  BicgStabl Polynomial Degree = 4
End



Solver 3
  Equation = "MGDynamicsCalc"

  Procedure = "MagnetoDynamics" "MagnetoDynamicsCalcFields"
  Linear System Symmetric = True

  Potential Variable = String "AV"

  Calculate Current Density = Logical True
  Calculate Electric Field = Logical True
  Calculate Magnetic Field Strength = Logical True
  Calculate Joule Heating = True

  Steady State Convergence Tolerance = 0
  Linear System Solver = "Iterative"
  Linear System Preconditioning = None
  Linear System Residual Output = 0
  Linear System Max Iterations = 5000
  Linear System Iterative Method = CG
  Linear System Convergence Tolerance = 5.0e-6

!  Calculate Nodal Fields = Logical False
!  Impose Body Force Potential = Logical True
!  Impose Body Force Current = Logical True

!  Discontinuous Bodies = True
!  calculate harmonic peak power = logical true

  Calculate Magnetic Vector Potential = Logical True
  Calculate Current Density = Logical True
  Calculate Joule Heating = Logical True
  Calculate Electric Field = Logical True
  Calculate Magnetic Flux Density = Logical True
  Calculate Magnetic Field Strength = Logical True

End

Solver 4
	Exec Solver = after simulation
	Equation = SaveGrid
	Procedure = "SaveGridData" "SaveGridData"
	Filename Prefix = String sensing_current
	Output Format = String table
	Check for Duplicates = Logical True

	Grid nx = Integer 25
	Grid ny = Integer 1
	Grid nz = Integer 25
	
	Min Coordinate 1 = Real  0.003
	Min Coordinate 2 = Real -0.001
	Min Coordinate 3 = Real -0.003

	Max Coordinate 1 = Real  0.00375
	Max Coordinate 2 = Real  0.001
	Max Coordinate 3 = Real  0.003

	Vector Field 1 = String Current Density Re E
	Vector Field 2 = String Current Density Im E


End

Solver 5
  	Exec Solver =  After simulation
  	Equation = "result output"
  	Procedure = "ResultOutputSolve" "ResultOutputSolver"
  	Save Geometry Ids = Logical True ! add this line if you want to access boundaries in Paraview
  	Output File Name = File "shaft.vtu"
  	Output Format = String vtu
End



!---------BODY FORCE------
Body Force 1
	Name = "Solenoid Current Density"

	! tx(0) - x
	! tx(1) - y
	! tx(2) - z
	! tx(3) - t
	Current Density 1 = Variable coordinate
		Real MATC "x=tx(0); y=tx(1); r=sqrt(x*x+y*y); -1*I_dens*y/r"
	Current Density 2 = Variable coordinate
		Real MATC "x=tx(0); y=tx(1); r=sqrt(x*x+y*y); I_dens*x/r"
End


! ------- BOUNDARY CONDITIONS -------


Boundary condition 1
  name = "Far"
  target boundaries(1) = 13
  AV re {e} 1 = 0
  AV re {e} 2 = 0
  AV re {e} 3 = 0
  AV im {e} 1 = 0
  AV im {e} 2 = 0
  AV im {e} 3 = 0
End

Boundary condition 2
  name = "Torque_Zplus"
  target boundaries (1) = 11
!Force 3 = 2

	! tx(0) - x
	! tx(1) - y
	! tx(2) - z
	! tx(3) - t

	Force 1 = Variable coordinate
		Real MATC "x=tx(0); y=tx(1); r=sqrt(x*x+y*y); -1*sigma_s*y/r"
	Force 2 = Variable coordinate
		Real MATC "x=tx(0); y=tx(1); r=sqrt(x*x+y*y); sigma_s*x/r"
End


Boundary condition 3
  name = "Torque_Zminus"
  target boundaries (1) =  2 ! xxxxxxxxxxxx
	! tx(0) - x
	! tx(1) - y
	! tx(2) - z
	! tx(3) - t

Displacement 1 = 0
Displacement 2 = 0
Displacement 3 = 0

!	Force 1 = Variable coordinate
!		Real MATC "x=tx(0); y=tx(1); r=sqrt(x*x+y*y); -1*sigma_s*y/r"
!	Force 2 = Variable coordinate
!		Real MATC "x=tx(0); y=tx(1); r=sqrt(x*x+y*y); sigma_s*x/r"
End


